import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'

import type { RootState, AppThunk } from '../../app/store'

export interface PlannerState {
    hours: number[]
    task: [{
        from: string,
        to: string,
        name: string
    }]
}

const initialState: PlannerState = {
    hours: [0.00, 9.00, 17.00, 24.00],
    task: [{
        from: "09.00",
        to: "17.30",
        name: "work"
    }]
}

export const plannerSlice = createSlice({
    name: 'planner',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        addHour: (state, action: PayloadAction<number[]>) => {
            action.payload.map(hour => state.hours.push(hour))
            state.hours.sort()
        },

    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.

})


export const selectHoursPlanned = (state: RootState) => state.planner.hours

export const selectScheduledTasks = (state: RootState) => state.planner.task


export const { addHour } = plannerSlice.actions

export default plannerSlice.reducer